{"ast":null,"code":"var _jsxFileName = \"/Users/jan/code/ironhack/bootcamp/run2/w7d4/ironcontacts/src/App.js\";\nimport React, { useState } from 'react';\nimport allContacts from './contacts.json';\nimport './App.css';\nimport ContactList from './ContactList';\n\nfunction App() {\n  const [contacts, setContacts] = useState(allContacts.slice(0, 5));\n\n  function deleteContact(contactId) {\n    setContacts(contacts => contacts.filter(contact => contact.id !== contactId));\n  }\n\n  ;\n\n  const addContact = () => {\n    const random = allContacts[Math.floor(Math.random() * allContacts.length)]; // checking if in the state of contacts we already have the random contact\n\n    if (contacts.find(contact => contact.id === random.id)) {\n      // checking if there is still some contacts to add\n      if (contacts.length < allContacts.length) {\n        addContact();\n      }\n\n      return;\n    }\n\n    setContacts(contacts => [random, ...contacts]);\n  };\n\n  const sortByName = () => {\n    const sorted = [...contacts];\n    sorted.sort((a, b) => a.name.localeCompare(b.name));\n    setContacts(sorted);\n  };\n\n  const sortByPopularity = () => {\n    const sorted = contacts.slice();\n    sorted.sort((a, b) => b.popularity - a.popularity);\n    setContacts(sorted);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"IronContacts\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Add Random Contact\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sortByName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Sort by name\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sortByPopularity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Sort by popularity\"), /*#__PURE__*/React.createElement(ContactList, {\n    contacts: contacts,\n    deleteContact: deleteContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","allContacts","ContactList","App","contacts","setContacts","slice","deleteContact","contactId","filter","contact","id","addContact","random","Math","floor","length","find","sortByName","sorted","sort","a","b","name","localeCompare","sortByPopularity","popularity"],"sources":["/Users/jan/code/ironhack/bootcamp/run2/w7d4/ironcontacts/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport allContacts from './contacts.json';\nimport './App.css';\nimport ContactList from './ContactList';\n\nfunction App() {\n\n  const [contacts, setContacts] = useState(allContacts.slice(0, 5))\n\n  function deleteContact(contactId) {\n    setContacts(contacts => contacts.filter(contact => contact.id !== contactId))\n  };\n\n\n  const addContact = () => {\n    const random = allContacts[Math.floor(Math.random() * allContacts.length)];\n\n    // checking if in the state of contacts we already have the random contact\n    if (contacts.find(contact => contact.id === random.id)) {\n      // checking if there is still some contacts to add\n      if (contacts.length < allContacts.length) {\n        addContact();\n      }\n      return;\n    }\n    setContacts(contacts => [random, ...contacts])\n  };\n\n  const sortByName = () => {\n    const sorted = [...contacts];\n    sorted.sort((a, b) => a.name.localeCompare(b.name));\n\n    setContacts(sorted)\n  };\n\n  const sortByPopularity = () => {\n    const sorted = contacts.slice();\n    sorted.sort((a, b) => b.popularity - a.popularity);\n\n    setContacts(sorted)\n  };\n\n  return (\n    <div className='App'>\n\n      <h1>IronContacts</h1>\n\n      <button onClick={addContact}>Add Random Contact</button>\n      <button onClick={sortByName}>Sort by name</button>\n      <button onClick={sortByPopularity}>Sort by popularity</button>\n\n      <ContactList contacts={contacts} deleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,GAAT,GAAe;EAEb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACC,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAD,CAAxC;;EAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;IAChCH,WAAW,CAACD,QAAQ,IAAIA,QAAQ,CAACK,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeH,SAA1C,CAAb,CAAX;EACD;;EAAA;;EAGD,MAAMI,UAAU,GAAG,MAAM;IACvB,MAAMC,MAAM,GAAGZ,WAAW,CAACa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBZ,WAAW,CAACe,MAAvC,CAAD,CAA1B,CADuB,CAGvB;;IACA,IAAIZ,QAAQ,CAACa,IAAT,CAAcP,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeE,MAAM,CAACF,EAA/C,CAAJ,EAAwD;MACtD;MACA,IAAIP,QAAQ,CAACY,MAAT,GAAkBf,WAAW,CAACe,MAAlC,EAA0C;QACxCJ,UAAU;MACX;;MACD;IACD;;IACDP,WAAW,CAACD,QAAQ,IAAI,CAACS,MAAD,EAAS,GAAGT,QAAZ,CAAb,CAAX;EACD,CAZD;;EAcA,MAAMc,UAAU,GAAG,MAAM;IACvB,MAAMC,MAAM,GAAG,CAAC,GAAGf,QAAJ,CAAf;IACAe,MAAM,CAACC,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAAtB;IAEAlB,WAAW,CAACc,MAAD,CAAX;EACD,CALD;;EAOA,MAAMM,gBAAgB,GAAG,MAAM;IAC7B,MAAMN,MAAM,GAAGf,QAAQ,CAACE,KAAT,EAAf;IACAa,MAAM,CAACC,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACI,UAAF,GAAeL,CAAC,CAACK,UAAvC;IAEArB,WAAW,CAACc,MAAD,CAAX;EACD,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAFF,eAIE;IAAQ,OAAO,EAAEP,UAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAJF,eAKE;IAAQ,OAAO,EAAEM,UAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBALF,eAME;IAAQ,OAAO,EAAEO,gBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBANF,eAQE,oBAAC,WAAD;IAAa,QAAQ,EAAErB,QAAvB;IAAiC,aAAa,EAAEG,aAAhD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARF,CADF;AAYD;;AAED,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}